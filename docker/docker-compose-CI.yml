version: "3.7"

services:
  drone-server:
    image: drone/drone:latest
    container_name: ${CONTEXT_NAME}_drone-server
    volumes:
      - $CONTEXT_DIR/data-drone:/var/lib/drone/
    restart: always
    depends_on:
      - gitea
    environment:
      - DRONE_OPEN=true
        #- DRONE_DEBUG=true
        #- DRONE_LOGS_DEBUG=true
        #- DRONE_LOGS_TEXT=true
        #- DRONE_LOGS_TRACE=true
        #- DRONE_SERVER_PORT=:80
      - DRONE_DATABASE_DRIVER=sqlite3
      #- DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GITEA=true
      - DRONE_GITEA_SERVER=http://gitea
      - DRONE_RPC_SECRET=9c3920e3e748aff735d2e16ef31fbc12
      - DRONE_SERVER_HOST=$DRONE_HOST
      #- DRONE_HOST=$DRONE_URL
      - DRONE_SERVER_PROTO=http
      - DRONE_TLS_AUTOCERT=false
      - DRONE_AGENTS_ENABLED=true
      #- DRONE_GITEA_SKIP_VERIFY=true
      - DRONE_NETWORK=internal-network
      - DRONE_GITEA_CLIENT_ID=2beb6624-4339-4c1e-82e6-c588fd6ca4f9
      - DRONE_GITEA_CLIENT_SECRET=gto_6mqv7yweycmjfwk4gltkon2wiejo27g6fkfpb7nlidn7ebeq4ibq
    networks:
      - internal-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drone.entrypoints=web"
      - "traefik.http.routers.drone.rule=Host(`$DRONE_HOST`)"
      - "traefik.http.services.drone.loadbalancer.server.port=80"

  drone-agent:
    image: drone/agent:latest
    container_name: ${CONTEXT_NAME}_drone-agent
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=9c3920e3e748aff735d2e16ef31fbc12
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_NETWORK=internal-network
      - DRONE_RUNNER_NETWORKS=internal-network
    networks:
      - internal-network

networks:
  internal-network:
    name: ${CONTEXT_NAME}_network